@font-face {
    font-family: 'Al Qabas';
    src: url('../font/AlQabas-Light.eot');
    src: url('../font/AlQabas-Light.eot?#iefix') format('embedded-opentype'), url('../font/AlQabas-Light.woff2') format('woff2'), url('../font/AlQabas-Light.woff') format('woff'), url('../font/AlQabas-Light.ttf') format('truetype'), url('../font/AlQabas-Light.svg#AlQabas-Light') format('svg');
    font-weight: 300;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: 'Al Qabas';
    src: url('../font/AlQabas-Regular.eot');
    src: url('../font/AlQabas-Regular.eot?#iefix') format('embedded-opentype'), url('../font/AlQabas-Regular.woff2') format('woff2'), url('../font/AlQabas-Regular.woff') format('woff'), url('../font/AlQabas-Regular.ttf') format('truetype'), url('../font/AlQabas-Regular.svg#AlQabas-Regular') format('svg');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: 'Al Qabas';
    src: url('../font/AlQabas-Bold.eot');
    src: url('../font/AlQabas-Bold.eot?#iefix') format('embedded-opentype'), url('../font/AlQabas-Bold.woff2') format('woff2'), url('../font/AlQabas-Bold.woff') format('woff'), url('../font/AlQabas-Bold.ttf') format('truetype'), url('../font/AlQabas-Bold.svg#AlQabas-Bold') format('svg');
    font-weight: bold;
    font-style: normal;
    font-display: swap;
}



@mixin Red_Hat_Display($font-weight) {
    font-family: 'Red Hat Display', sans-serif;
    font-weight: $font-weight;
}

@mixin Al_Qabas($font-weight) {
    font-family: 'Al Qabas';
    font-weight: $font-weight;
}

@mixin border_radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
}

@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}

// rotate
@mixin rotate ($deg) {
    @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
    @include transform(scale($scale));
}

// translate
@mixin translate ($x,
    $y) {
    @include transform(translate($x,
            $y));
}

// skew
@mixin skew ($x,
    $y) {
    @include transform(skew(#{$x}deg,
            #{$y}deg));
}

//transform origin
@mixin transform-origin ($origin) {
    moz-transform-origin: $origin;
    -o-transform-origin: $origin;
    -ms-transform-origin: $origin;
    -webkit-transform-origin: $origin;
    transform-origin: $origin;
}